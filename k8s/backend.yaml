apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: cruvz-srt
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command: 
        - sh
        - -c
        - |
          until pg_isready -h postgres-service -p 5432 -U cruvz; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL is ready!"
      - name: wait-for-redis
        image: redis:7.2-alpine
        command:
        - sh
        - -c
        - |
          until redis-cli -h redis-service -p 6379 ping > /dev/null 2>&1; do
            echo "Waiting for Redis..."
            sleep 2
          done
          echo "Redis is ready!"
      - name: run-migrations
        image: cruvz-srt-backend:latest
        imagePullPolicy: IfNotPresent
        command: ["node", "run-migrations.js"]
        envFrom:
        - configMapRef:
            name: cruvz-config
        - secretRef:
            name: cruvz-secrets
      containers:
      - name: backend
        image: cruvz-srt-backend:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        envFrom:
        - configMapRef:
            name: cruvz-config
        - secretRef:
            name: cruvz-secrets
        env:
        - name: PORT
          value: "5000"
        resources:
          requests:
            memory: "1Gi"
            cpu: "1"
          limits:
            memory: "2Gi"
            cpu: "2"
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 50
          periodSeconds: 25
          timeoutSeconds: 8
          failureThreshold: 4
        readinessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 5
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: uploads
          mountPath: /app/uploads
      volumes:
      - name: logs
        emptyDir: {}
      - name: uploads
        persistentVolumeClaim:
          claimName: backend-uploads-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: cruvz-srt
spec:
  selector:
    app: backend
  ports:
  - port: 5000
    targetPort: 5000
  type: ClusterIP

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backend-uploads-pvc
  namespace: cruvz-srt
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: cruvz-srt-storage
  resources:
    requests:
      storage: 5Gi