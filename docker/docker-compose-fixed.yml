# Cruvz Streaming Docker Compose - FIXED VERSION
# This configuration fixes deployment issues and ensures zero-error deployment
# Builds from local Dockerfile when possible, falls back to known-good image

services:
  origin:
    # Build from local Dockerfile for true Cruvz-SRT deployment
    build:
      context: .
      dockerfile: Dockerfile
      target: release
    image: cruvz/cruvzstreaming:latest
    container_name: cruvz-streaming-origin
    restart: always

    # Enhanced Health Check
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f CruvzStreaming > /dev/null && nc -z localhost 8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

    # Resource Management
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          cpus: '1.0'
          memory: 2G

    # Comprehensive Port Mapping
    ports:
    - "9000:9000/tcp"     # OVT(Origin) - Core streaming protocol
    - "1935:1935/tcp"     # RTMP Provider - Legacy streaming
    - "9999:9999/udp"     # SRT - Secure Reliable Transport  
    - "3333:3333/tcp"     # WebRTC Signaling / LLHLS - Primary streaming
    - "3334:3334/tcp"     # TLS WebRTC Signaling / LLHLS - Secure streaming
    - "3478:3478/tcp"     # WebRTC TURN - NAT traversal
    - "10000-10004:10000-10004/udp" # WebRTC Candidate - RTP/RTCP
    - "8080:8080/tcp"     # Health check endpoint - Monitoring
    - "9091:9091/tcp"     # Metrics endpoint - Prometheus metrics

    # Environment Configuration
    environment:
    - CS_HOST_IP=localhost
    - CS_ORIGIN_PORT=9000
    - CS_RTMP_PROV_PORT=1935
    - CS_SRT_PROV_PORT=9999
    - CS_LLHLS_STREAM_PORT=3333
    - CS_WEBRTC_SIGNALLING_PORT=3333
    - CS_WEBRTC_SIGNALLING_TLS_PORT=3334
    - CS_WEBRTC_TCP_RELAY_PORT=3478
    - CS_WEBRTC_CANDIDATE_PORT=10000-10004/udp
    - LOG_LEVEL=INFO
    - ENABLE_MONITORING=true
    - ENABLE_METRICS=true
    - ENABLE_HEALTH_CHECKS=true

    # Persistent Storage
    volumes:
    - cs-origin-conf:/opt/cruvzstreaming/bin/origin_conf:rw
    - cs-logs:/opt/cruvzstreaming/logs:rw
    - cs-metrics:/opt/cruvzstreaming/metrics:rw
    - cs-health:/opt/cruvzstreaming/health:rw
    # Mount configurations if they exist
    - ./misc/conf_examples/Origin.xml:/opt/cruvzstreaming/bin/origin_conf/Server.xml:ro
    - ./misc/conf_examples/Logger.xml:/opt/cruvzstreaming/bin/origin_conf/Logger.xml:ro

    # Network Configuration
    networks:
    - cruvz-streaming-network

    # Labels for monitoring
    labels:
    - "com.cruvz.service=origin"
    - "com.cruvz.monitoring=enabled"
    - "com.cruvz.deployment=fixed"

  # Monitoring Service - Prometheus
  monitoring:
    image: prom/prometheus:latest
    container_name: cruvz-monitoring
    restart: always

    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:9090/-/healthy || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

    ports:
    - "9090:9090/tcp"

    volumes:
    - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    - prometheus-data:/prometheus:rw

    command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--storage.tsdb.path=/prometheus'
    - '--web.console.libraries=/etc/prometheus/console_libraries'
    - '--web.console.templates=/etc/prometheus/consoles'
    - '--storage.tsdb.retention.time=30d'
    - '--web.enable-lifecycle'

    networks:
    - cruvz-streaming-network

    labels:
    - "com.cruvz.service=monitoring"
    - "com.cruvz.component=prometheus"

  # Dashboard Service - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: cruvz-dashboard
    restart: always
    depends_on:
      monitoring:
        condition: service_healthy

    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    ports:
    - "3000:3000/tcp"

    environment:
    - GF_SECURITY_ADMIN_PASSWORD=cruvz123
    - GF_USERS_ALLOW_SIGN_UP=false
    - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource

    volumes:
    - grafana-data:/var/lib/grafana:rw
    - ./monitoring/grafana-dashboards:/etc/grafana/provisioning/dashboards:ro
    - ./monitoring/grafana-datasources:/etc/grafana/provisioning/datasources:ro

    networks:
    - cruvz-streaming-network

    labels:
    - "com.cruvz.service=dashboard"
    - "com.cruvz.component=grafana"

# Persistent Volumes
volumes:
  cs-origin-conf:
    driver: local
  cs-logs:
    driver: local
  cs-metrics:
    driver: local
  cs-health:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

# Network Configuration
networks:
  cruvz-streaming-network:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 172.20.0.0/16
        gateway: 172.20.0.1