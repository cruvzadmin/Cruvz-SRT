# Production Docker Compose - Simplified and Optimized
# Cruvz Streaming Platform - Essential Services Only

services:
  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cruvz-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    volumes:
      - ./data/logs/backend:/app/logs
      - ./.env.production:/app/.env:ro
    environment:
      - NODE_ENV=production
      - PORT=5000
      - LOG_LEVEL=info
    networks:
      - cruvz-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Streaming Engine (Origin)
  origin:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cruvz-origin
    restart: unless-stopped
    ports:
      - "8080:8080"      # HTTP API
      - "1935:1935"      # RTMP
      - "9999:9999/udp"  # SRT
      - "3333:3333"      # WebRTC Signaling
      - "10000-10010:10000-10010/udp"  # WebRTC Media
    volumes:
      - ./configs:/opt/ovenmediaengine/bin/origin_conf:ro
      - ./data/recordings:/opt/ovenmediaengine/recordings
      - ./data/logs/origin:/opt/ovenmediaengine/logs
    environment:
      - OME_HOST_IP=0.0.0.0
      - OME_RTMP_PROV_PORT=1935
      - OME_SRT_PROV_PORT=9999
      - OME_WEBRTC_SIGNALLING_PORT=3333
      - OME_API_PORT=8080
    networks:
      - cruvz-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/stats/current"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Web Application
  web-app:
    image: nginx:alpine
    container_name: cruvz-web-app
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./web-app:/usr/share/nginx/html:ro
      - ./web-app/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      - BACKEND_API_URL=http://backend:5000
    networks:
      - cruvz-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  cruvz-network:
    name: cruvz-production
    driver: bridge

volumes:
  backend-logs:
    name: cruvz-backend-logs
  origin-logs:
    name: cruvz-origin-logs
  recordings:
    name: cruvz-recordings