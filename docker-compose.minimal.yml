version: '3.8'

services:
  # Start with a minimal working backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: cruvz-streaming-backend
    restart: always
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=./data/cruvz_streaming.db
      - JWT_SECRET=your-super-secure-jwt-secret-change-this
      - FRONTEND_URL=http://localhost
    volumes:
      - backend-data:/app/data:rw
    networks:
      - cruvz-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Web Application Service
  web-app:
    image: nginx:alpine
    container_name: cruvz-streaming-webapp
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "80:80"
    volumes:
      - ./web-app:/usr/share/nginx/html:ro
      - ./web-app/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - cruvz-network
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Use pre-built OvenMediaEngine directly
  origin:
    image: airensoft/ovenmediaengine:latest
    container_name: cruvz-streaming-origin
    restart: always
    ports:
      - "1935:1935"     # RTMP
      - "3333:3333"     # WebRTC/LLHLS
      - "9999:9999/udp" # SRT
      - "8080:8080"     # API
    volumes:
      - ./misc/conf_examples/Origin.xml:/opt/ovenmediaengine/bin/origin_conf/Server.xml:ro
      - ./misc/conf_examples/Logger.xml:/opt/ovenmediaengine/bin/origin_conf/Logger.xml:ro
      - cs-logs:/opt/ovenmediaengine/logs:rw
    networks:
      - cruvz-network
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f OvenMediaEngine > /dev/null"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  backend-data:
    driver: local
  cs-logs:
    driver: local

networks:
  cruvz-network:
    driver: bridge